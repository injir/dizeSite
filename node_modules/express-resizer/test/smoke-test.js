"use strict";
/*global describe:false, it:false */

var request = require("supertest");
var Resizer = require("../");
var express = require("express");
var fs = require("fs");

var cleanup = function (path, cb) {
    return function () {
        fs.unlink(path, cb);
    };
};

describe("resizer", function () {
    before(function (done) {
        var count = 0;
        function copyDone() {
            if(count++ == 254) done();
        }

        for (var i = 0; i < 255; i++) {
            var input = fs.createReadStream(__dirname + "/test-images/profile.png");
            input.pipe(fs.createWriteStream(__dirname + "/test-images/profile-" + i + ".png"))
            input.on("end", copyDone);
        };
    });

    after(function (done) {
        done();
    });

    it("should return images when requed in parallel", function (done) {
        var app = express();
        var count = 0;
        var cb = function () {
            console.dir(arguments[0]);
            console.dir(count);
            if(count++ == 509) {
                done();
            }
        };

        var resizer = new Resizer();
        resizer.attach("name")
            .publicDir(__dirname)
            .from("/test-images")
            .to("/test-out-images");
        app.use(resizer.app);

        for (var i = 0; i < 2; i ++) {
            request(app)
                .get("/test-out-images/profile-"+ i +".png")
                .expect(200, cb);
            request(app)
                .get("/test-out-images/profile-" + i +".png")
                .expect(200, cb);
        }
    });
});
